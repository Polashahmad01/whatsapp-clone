[{"/home/polash/Desktop/whatsapp-clone/src/App.js":"1","/home/polash/Desktop/whatsapp-clone/src/component/Sidebar/Sidebar.js":"2","/home/polash/Desktop/whatsapp-clone/src/component/SidebarChat/SidebarChat.js":"3","/home/polash/Desktop/whatsapp-clone/src/component/Chat/Chat.js":"4","/home/polash/Desktop/whatsapp-clone/src/component/firebase/firebase.js":"5","/home/polash/Desktop/whatsapp-clone/src/component/Login/Login.js":"6","/home/polash/Desktop/whatsapp-clone/src/index.js":"7","/home/polash/Desktop/whatsapp-clone/src/component/StateProvider/StateProvider.js":"8","/home/polash/Desktop/whatsapp-clone/src/component/reducer/reducer.js":"9"},{"size":870,"mtime":1608653786143,"results":"10","hashOfConfig":"11"},{"size":2227,"mtime":1608653945710,"results":"12","hashOfConfig":"11"},{"size":1569,"mtime":1608657831712,"results":"13","hashOfConfig":"11"},{"size":3973,"mtime":1608656110182,"results":"14","hashOfConfig":"11"},{"size":627,"mtime":1608647173027,"results":"15","hashOfConfig":"11"},{"size":1229,"mtime":1608653651352,"results":"16","hashOfConfig":"11"},{"size":455,"mtime":1608652360639,"results":"17","hashOfConfig":"11"},{"size":480,"mtime":1608651909846,"results":"18","hashOfConfig":"11"},{"size":416,"mtime":1608735408856,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"c730up",{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/polash/Desktop/whatsapp-clone/src/App.js",["42","43"],"/home/polash/Desktop/whatsapp-clone/src/component/Sidebar/Sidebar.js",["44"],"import React, { useState, useEffect } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\n\nimport './Sidebar.css';\nimport SidebarChat from '../SidebarChat/SidebarChat';\nimport db from '../firebase/firebase';\nimport { useStateValue } from '../StateProvider/StateProvider';\n\nconst Sidebar = () => {\n    const [ rooms, setRooms ] = useState([]);\n    const [{ user }, dispatch ] = useStateValue();\n\n    useEffect(() => {\n        const unSubscribe = db.collection('rooms').onSnapshot(snapshot => (\n            setRooms(snapshot.docs.map(doc => ({\n                id: doc.id,\n                data: doc.data(),\n            })))\n        ));\n\n            return () => {\n                unSubscribe();\n            }\n    }, [])\n\n    return (\n        <div className=\"sidebar\">\n            <div className=\"sidebar__header\">\n                <Avatar src={user?.photoURL} />\n                <div className=\"sidebar__headerRight\">\n                    <IconButton>\n                        <DonutLargeIcon />\n                    </IconButton>\n                    <IconButton>\n                        <ChatIcon />\n                    </IconButton>\n                    <IconButton>\n                        <MoreVertIcon/>\n                    </IconButton>\n                </div>\n            </div>\n            <div className=\"sidebar__search\">\n                <div className=\"sidebar__searchContainer\">\n                    <SearchOutlinedIcon />\n                    <input type=\"text\" placeholder=\"Search on WhatsApp\"/>\n                </div>\n            </div>\n            <div className=\"sidebar__chats\">\n                <SidebarChat addNewChat/>\n                {rooms.map(room => (\n                    <SidebarChat \n                        key={room.id}\n                        id={room.id}\n                        name={room.data.name}\n                    />\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Sidebar \n ",["45","46"],"/home/polash/Desktop/whatsapp-clone/src/component/SidebarChat/SidebarChat.js",[],"/home/polash/Desktop/whatsapp-clone/src/component/Chat/Chat.js",["47"],"import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Avatar from '@material-ui/core/Avatar';\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport MicIcon from '@material-ui/icons/Mic';\nimport firebase from 'firebase';\n\nimport './Chat.css';\nimport db from '../firebase/firebase';\nimport { useStateValue } from '../StateProvider/StateProvider';\n\nconst Chat = () => {\n    const [ seed, setSeed ] = useState('');\n    const [ input, setInput ] = useState('');\n    const { roomId } = useParams();\n    const [ roomName, setRoomName ] = useState('');\n    const [ messages, setMessages ] = useState([]);\n    const [{ user }, dispatch ] = useStateValue();\n\n    useEffect(() => {\n        if(roomId) {\n            db.collection('rooms').doc(roomId).onSnapshot( snapshot => (\n                setRoomName(snapshot.data().name)\n            ))\n\n            db.collection('rooms')\n              .doc(roomId)\n              .collection('messages')\n              .orderBy('timestamp', 'asc')\n              .onSnapshot(snapshot => (\n                setMessages(snapshot.docs.map(doc => doc.data()))\n            ))\n        }\n    }, [roomId]);\n\n    useEffect(() => {\n        setSeed(Math.floor(Math.random() * 10000 ));\n    }, [roomId])\n\n    const sendMessage = (e) => {\n        e.preventDefault();\n        \n        db.collection('rooms').doc(roomId).collection('messages').add({\n             message: input,\n             name: user.displayName,\n             timestamp: firebase.firestore.FieldValue.serverTimestamp()\n        });\n\n        setInput('');\n    }\n\n    return (\n        <div className=\"chat\">\n            <div className=\"chat__header\">\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\n                <div className=\"chat__headerInfo\">\n                    <h4>{roomName}</h4>\n                    <p>last seen {\" \"}\n                    {new Date(messages[messages.length - 1 ]?.timestamp?.toDate()).toUTCString()}\n                    </p>\n                </div>\n                <div className=\"chat__headerRight\">\n                    <IconButton>\n                        <SearchOutlinedIcon />\n                    </IconButton>\n                    <IconButton>\n                        <AttachFileIcon />\n                    </IconButton>\n                    <IconButton>\n                        <MoreVertIcon />\n                    </IconButton>\n                </div>\n           </div>\n           <div className=\"chat__body\">\n               {messages.map(message => (\n                   <p className={`chat__message ${message.name === user.displayName && 'chat__reciever'}`}>\n                    <span className=\"chat__name\">\n                        {message.name}\n                    </span>\n                        {message.message}\n                    <span className=\"chat__timestamp\">\n                        {new Date(message.timestamp?.toDate()).toUTCString()}\n                    </span>\n                   </p>\n               ))}\n            </div>\n            <div className=\"chat__footer\">\n                <IconButton>\n                    <InsertEmoticonIcon />\n                </IconButton>\n                <form>\n                    <input \n                        type=\"text\" \n                        placeholder=\"Type a message\"\n                        value={input}\n                        onChange={e => setInput(e.target.value)}\n                    />\n                    <button type=\"submit\" onClick={sendMessage}>Send a message</button>\n                </form>\n                <IconButton>\n                    <MicIcon />\n                </IconButton>\n           </div>\n        </div>\n    )\n}\n\nexport default Chat\n",["48","49"],"/home/polash/Desktop/whatsapp-clone/src/component/firebase/firebase.js",[],"/home/polash/Desktop/whatsapp-clone/src/component/Login/Login.js",["50"],"/home/polash/Desktop/whatsapp-clone/src/index.js",[],"/home/polash/Desktop/whatsapp-clone/src/component/StateProvider/StateProvider.js",[],"/home/polash/Desktop/whatsapp-clone/src/component/reducer/reducer.js",[],{"ruleId":"51","severity":1,"message":"52","line":1,"column":17,"nodeType":"53","messageId":"54","endLine":1,"endColumn":25},{"ruleId":"51","severity":1,"message":"55","line":11,"column":20,"nodeType":"53","messageId":"54","endLine":11,"endColumn":28},{"ruleId":"51","severity":1,"message":"55","line":16,"column":22,"nodeType":"53","messageId":"54","endLine":16,"endColumn":30},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"51","severity":1,"message":"55","line":22,"column":22,"nodeType":"53","messageId":"54","endLine":22,"endColumn":30},{"ruleId":"56","replacedBy":"60"},{"ruleId":"58","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":10,"column":12,"nodeType":"64","messageId":"65","endLine":10,"endColumn":14},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","no-native-reassign",["66"],"no-negated-in-lhs",["67"],["66"],["67"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation"]